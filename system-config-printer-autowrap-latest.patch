diff -up system-config-printer-1.1.16/gtk_label_autowrap.py.autowrap_latest system-config-printer-1.1.16/gtk_label_autowrap.py
--- system-config-printer-1.1.16/gtk_label_autowrap.py.autowrap_latest	2011-06-14 17:47:36.350416432 +0200
+++ system-config-printer-1.1.16/gtk_label_autowrap.py	2011-06-14 17:48:55.366013859 +0200
@@ -1,7 +1,8 @@
-# utils.py
 #
-# Copyright (c) 2004 Thomas Woerner <twoerner@redhat.com>
-# Copyright (c) 2006 Florian Festi <ffesti@redhat.com>
+# Copyright (C) 2004, 2007 Red Hat, Inc.
+# Authors:
+# Thomas Woerner <twoerner@redhat.com>
+# Florian Festi <ffesti@redhat.com>
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -14,12 +15,10 @@
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#
 
-import gtk
-from pango import SCALE
+import gtk, pango
 
 ### set autowrapping for all labels in this widget tree
 def set_autowrap(widget):
@@ -29,20 +28,43 @@ def set_autowrap(widget):
             set_autowrap(children[i])
     elif isinstance(widget, gtk.Label) and widget.get_line_wrap():
         widget.connect_after("size-allocate", label_size_allocate)
+        widget.set_property("xalign", 0)
+        widget.set_property("yalign", 0)
 
 ### set wrap width to the pango.Layout of the labels ###
 def label_size_allocate(widget, allocation):
     layout = widget.get_layout()
 
-    lw_old, lh_old = layout.get_size()
+    lw_old, lh_old = layout.get_pixel_size()
+
     # fixed width labels
-    if lw_old/SCALE == allocation.width:
+    if lw_old == allocation.width:
         return
-    layout.set_width(allocation.width * SCALE)
 
-    lw, lh = layout.get_size()
+    layout.set_width(allocation.width * pango.SCALE)
+    lw, lh = layout.get_pixel_size()
 
     if lh_old != lh:
-        widget.set_size_request(-1, lh/SCALE)
-        
-    return
+        widget.set_size_request(-1, lh)
+
+##############################################################################
+
+if __name__ == "__main__":
+    window = gtk.Window(gtk.WINDOW_TOPLEVEL)
+    window.connect("delete_event", gtk.main_quit)
+
+    label = gtk.Label("When you invoke GCC, it normally does preprocessing, compilation, assembly and linking.")
+    label.set_line_wrap(True)
+    label.set_use_markup(True)
+    label.set_property("xalign", 1)
+    label.set_property("yalign", 1)
+
+    hbox = gtk.HBox()
+    hbox.pack_start(label)
+#    window.add(label)
+    window.add(hbox)
+    set_autowrap(window)
+
+    window.set_resizable(True)
+    window.show_all()
+    gtk.main()
